ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_NVIC_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_NVIC_Init:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "tim.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //----------  Input Capture Example ----------
  48:Core/Src/main.c **** // volatile uint16_t TimerCounterDown;
  49:Core/Src/main.c **** // volatile uint16_t TimerCounterUp;
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_NVIC_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****  * @brief  The application entry point.
  66:Core/Src/main.c ****  * @retval int
  67:Core/Src/main.c ****  */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_USART2_UART_Init();
  93:Core/Src/main.c ****   MX_TIM2_Init();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize interrupts */
  96:Core/Src/main.c ****   MX_NVIC_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   //------------ Normal Timer ------------------
 100:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim1);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   //----------  Input Capture Example ----------
 103:Core/Src/main.c ****   // HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);
 104:Core/Src/main.c ****   // HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_2);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //----------- output Compare Example ---------
 107:Core/Src/main.c ****   // HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1);
 108:Core/Src/main.c ****   // HAL_TIM_OC_Start_IT(&htim2, TIM_CHANNEL_2);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   // -------------  PWM ------------------
 111:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     // LED Fade mode with HAL_DELAY ;/ only for test xD
 120:Core/Src/main.c ****     uint8_t i;
 121:Core/Src/main.c ****     for (i = 0; i < 100; i++)
 122:Core/Src/main.c ****     {
 123:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, i * 10);
 124:Core/Src/main.c ****       HAL_Delay(10); //!!!!!! ONLY FOR TEST
 125:Core/Src/main.c ****     }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     for (i = 100; i > 0; i--)
 128:Core/Src/main.c ****     {
 129:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, i * 10);
 130:Core/Src/main.c ****       HAL_Delay(10); //!!!!!! ONLY FOR TEST
 131:Core/Src/main.c ****     }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE END WHILE */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c ****   /* USER CODE END 3 */
 138:Core/Src/main.c **** }
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** /**
 141:Core/Src/main.c ****  * @brief System Clock Configuration
 142:Core/Src/main.c ****  * @retval None
 143:Core/Src/main.c ****  */
 144:Core/Src/main.c **** void SystemClock_Config(void)
 145:Core/Src/main.c **** {
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 150:Core/Src/main.c ****    */
 151:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 152:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 155:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 156:Core/Src/main.c ****    */
 157:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 167:Core/Src/main.c ****   {
 168:Core/Src/main.c ****     Error_Handler();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Core/Src/main.c ****    */
 173:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 174:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****  * @brief NVIC Configuration.
 187:Core/Src/main.c ****  * @retval None
 188:Core/Src/main.c ****  */
 189:Core/Src/main.c **** static void MX_NVIC_Init(void)
 190:Core/Src/main.c **** {
  28              		.loc 1 190 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 191:Core/Src/main.c ****   /* TIM2_IRQn interrupt configuration */
 192:Core/Src/main.c ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
  36              		.loc 1 192 3 view .LVU1
  37 0002 0022     		movs	r2, #0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 5


  38 0004 1146     		mov	r1, r2
  39 0006 1C20     		movs	r0, #28
  40 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  41              	.LVL0:
 193:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
  42              		.loc 1 193 3 view .LVU2
  43 000c 1C20     		movs	r0, #28
  44 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  45              	.LVL1:
 194:Core/Src/main.c **** }
  46              		.loc 1 194 1 is_stmt 0 view .LVU3
  47 0012 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE132:
  51              		.section	.text.Error_Handler,"ax",%progbits
  52              		.align	1
  53              		.global	Error_Handler
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	Error_Handler:
  59              	.LFB133:
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** //-------------- Normal Timer ------------
 199:Core/Src/main.c **** // void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 200:Core/Src/main.c **** // {
 201:Core/Src/main.c **** //   if ((htim->Instance) == TIM1)
 202:Core/Src/main.c **** //   {
 203:Core/Src/main.c **** //     HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 204:Core/Src/main.c **** //   }
 205:Core/Src/main.c **** // }
 206:Core/Src/main.c **** //----------  Input Capture Example -----
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** // void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 209:Core/Src/main.c **** // {
 210:Core/Src/main.c **** //   if (htim->Instance == TIM2)
 211:Core/Src/main.c **** //   {
 212:Core/Src/main.c **** //     if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)
 213:Core/Src/main.c **** //     {
 214:Core/Src/main.c **** //       TimerCounterDown = __HAL_TIM_GetCompare(htim, TIM_CHANNEL_1);
 215:Core/Src/main.c **** //       HAL_TIM_IC_Start_IT(htim, TIM_CHANNEL_1);
 216:Core/Src/main.c **** //     }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** //     if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_2)
 219:Core/Src/main.c **** //     {
 220:Core/Src/main.c **** //       TimerCounterUp = __HAL_TIM_GetCompare(htim, TIM_CHANNEL_2);
 221:Core/Src/main.c **** //       HAL_TIM_IC_Start_IT(htim, TIM_CHANNEL_2);
 222:Core/Src/main.c **** //     }
 223:Core/Src/main.c **** //   }
 224:Core/Src/main.c **** // }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** //------------------ output Compare Example ---------------
 227:Core/Src/main.c **** // HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 228:Core/Src/main.c **** // {
 229:Core/Src/main.c **** //   static uint8_t i; // Variable for CCR modification
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 6


 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** //   if (htim->Instance == TIM2)
 232:Core/Src/main.c **** //   {
 233:Core/Src/main.c **** //     HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 234:Core/Src/main.c **** //     if (i % 2)
 235:Core/Src/main.c **** //     {
 236:Core/Src/main.c **** //       __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_2, 1000);
 237:Core/Src/main.c **** //     }
 238:Core/Src/main.c **** //     else
 239:Core/Src/main.c **** //     {
 240:Core/Src/main.c **** //       __HAL_TIM_SET_COMPARE(htim, TIM_CHANNEL_2, 6000);
 241:Core/Src/main.c **** //     }
 242:Core/Src/main.c **** //     i++;
 243:Core/Src/main.c **** //   }
 244:Core/Src/main.c **** // }
 245:Core/Src/main.c **** /* USER CODE END 4 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 249:Core/Src/main.c ****  * @retval None
 250:Core/Src/main.c ****  */
 251:Core/Src/main.c **** void Error_Handler(void)
 252:Core/Src/main.c **** {
  60              		.loc 1 252 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ Volatile: function does not return.
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 253:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 254:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 255:Core/Src/main.c ****   __disable_irq();
  66              		.loc 1 255 3 view .LVU5
  67              	.LBB4:
  68              	.LBI4:
  69              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 7


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 8


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 9


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  70              		.loc 2 140 27 view .LVU6
  71              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72              		.loc 2 142 3 view .LVU7
  73              		.syntax unified
  74              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  75 0000 72B6     		cpsid i
  76              	@ 0 "" 2
  77              		.thumb
  78              		.syntax unified
  79              	.L4:
  80              	.LBE5:
  81              	.LBE4:
 256:Core/Src/main.c ****   while (1)
  82              		.loc 1 256 3 discriminator 1 view .LVU8
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****   }
  83              		.loc 1 258 3 discriminator 1 view .LVU9
 256:Core/Src/main.c ****   while (1)
  84              		.loc 1 256 9 discriminator 1 view .LVU10
  85 0002 FEE7     		b	.L4
  86              		.cfi_endproc
  87              	.LFE133:
  89              		.section	.text.SystemClock_Config,"ax",%progbits
  90              		.align	1
  91              		.global	SystemClock_Config
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	SystemClock_Config:
  97              	.LFB131:
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  98              		.loc 1 145 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 80
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 00B5     		push	{lr}
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 14, -4
 105 0002 95B0     		sub	sp, sp, #84
 106              		.cfi_def_cfa_offset 88
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 107              		.loc 1 146 3 view .LVU12
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 108              		.loc 1 146 22 is_stmt 0 view .LVU13
 109 0004 3022     		movs	r2, #48
 110 0006 0021     		movs	r1, #0
 111 0008 08A8     		add	r0, sp, #32
 112 000a FFF7FEFF 		bl	memset
 113              	.LVL2:
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 10


 114              		.loc 1 147 3 is_stmt 1 view .LVU14
 147:Core/Src/main.c **** 
 115              		.loc 1 147 22 is_stmt 0 view .LVU15
 116 000e 0023     		movs	r3, #0
 117 0010 0393     		str	r3, [sp, #12]
 118 0012 0493     		str	r3, [sp, #16]
 119 0014 0593     		str	r3, [sp, #20]
 120 0016 0693     		str	r3, [sp, #24]
 121 0018 0793     		str	r3, [sp, #28]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 122              		.loc 1 151 3 is_stmt 1 view .LVU16
 123              	.LBB6:
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 124              		.loc 1 151 3 view .LVU17
 125 001a 0193     		str	r3, [sp, #4]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 126              		.loc 1 151 3 view .LVU18
 127 001c 1E4A     		ldr	r2, .L11
 128 001e 116C     		ldr	r1, [r2, #64]
 129 0020 41F08051 		orr	r1, r1, #268435456
 130 0024 1164     		str	r1, [r2, #64]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 131              		.loc 1 151 3 view .LVU19
 132 0026 126C     		ldr	r2, [r2, #64]
 133 0028 02F08052 		and	r2, r2, #268435456
 134 002c 0192     		str	r2, [sp, #4]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 135              		.loc 1 151 3 view .LVU20
 136 002e 019A     		ldr	r2, [sp, #4]
 137              	.LBE6:
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 138              		.loc 1 151 3 view .LVU21
 152:Core/Src/main.c **** 
 139              		.loc 1 152 3 view .LVU22
 140              	.LBB7:
 152:Core/Src/main.c **** 
 141              		.loc 1 152 3 view .LVU23
 142 0030 0293     		str	r3, [sp, #8]
 152:Core/Src/main.c **** 
 143              		.loc 1 152 3 view .LVU24
 144 0032 1A4A     		ldr	r2, .L11+4
 145 0034 1168     		ldr	r1, [r2]
 146 0036 41F44041 		orr	r1, r1, #49152
 147 003a 1160     		str	r1, [r2]
 152:Core/Src/main.c **** 
 148              		.loc 1 152 3 view .LVU25
 149 003c 1268     		ldr	r2, [r2]
 150 003e 02F44042 		and	r2, r2, #49152
 151 0042 0292     		str	r2, [sp, #8]
 152:Core/Src/main.c **** 
 152              		.loc 1 152 3 view .LVU26
 153 0044 029A     		ldr	r2, [sp, #8]
 154              	.LBE7:
 152:Core/Src/main.c **** 
 155              		.loc 1 152 3 view .LVU27
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156              		.loc 1 157 3 view .LVU28
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 11


 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 157              		.loc 1 157 36 is_stmt 0 view .LVU29
 158 0046 0221     		movs	r1, #2
 159 0048 0891     		str	r1, [sp, #32]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 160              		.loc 1 158 3 is_stmt 1 view .LVU30
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 161              		.loc 1 158 30 is_stmt 0 view .LVU31
 162 004a 0122     		movs	r2, #1
 163 004c 0B92     		str	r2, [sp, #44]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 164              		.loc 1 159 3 is_stmt 1 view .LVU32
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 165              		.loc 1 159 41 is_stmt 0 view .LVU33
 166 004e 1022     		movs	r2, #16
 167 0050 0C92     		str	r2, [sp, #48]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 168              		.loc 1 160 3 is_stmt 1 view .LVU34
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 169              		.loc 1 160 34 is_stmt 0 view .LVU35
 170 0052 0E91     		str	r1, [sp, #56]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 171              		.loc 1 161 3 is_stmt 1 view .LVU36
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 172              		.loc 1 161 35 is_stmt 0 view .LVU37
 173 0054 0F93     		str	r3, [sp, #60]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 174              		.loc 1 162 3 is_stmt 1 view .LVU38
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 175              		.loc 1 162 30 is_stmt 0 view .LVU39
 176 0056 1092     		str	r2, [sp, #64]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 177              		.loc 1 163 3 is_stmt 1 view .LVU40
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 178              		.loc 1 163 30 is_stmt 0 view .LVU41
 179 0058 4FF4A873 		mov	r3, #336
 180 005c 1193     		str	r3, [sp, #68]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 181              		.loc 1 164 3 is_stmt 1 view .LVU42
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 182              		.loc 1 164 30 is_stmt 0 view .LVU43
 183 005e 0423     		movs	r3, #4
 184 0060 1293     		str	r3, [sp, #72]
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185              		.loc 1 165 3 is_stmt 1 view .LVU44
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 186              		.loc 1 165 30 is_stmt 0 view .LVU45
 187 0062 1393     		str	r3, [sp, #76]
 166:Core/Src/main.c ****   {
 188              		.loc 1 166 3 is_stmt 1 view .LVU46
 166:Core/Src/main.c ****   {
 189              		.loc 1 166 7 is_stmt 0 view .LVU47
 190 0064 08A8     		add	r0, sp, #32
 191 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 192              	.LVL3:
 166:Core/Src/main.c ****   {
 193              		.loc 1 166 6 view .LVU48
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 12


 194 006a 80B9     		cbnz	r0, .L9
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 195              		.loc 1 173 3 is_stmt 1 view .LVU49
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 196              		.loc 1 173 31 is_stmt 0 view .LVU50
 197 006c 0F23     		movs	r3, #15
 198 006e 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 199              		.loc 1 174 3 is_stmt 1 view .LVU51
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 200              		.loc 1 174 34 is_stmt 0 view .LVU52
 201 0070 0221     		movs	r1, #2
 202 0072 0491     		str	r1, [sp, #16]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 203              		.loc 1 175 3 is_stmt 1 view .LVU53
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 204              		.loc 1 175 35 is_stmt 0 view .LVU54
 205 0074 0023     		movs	r3, #0
 206 0076 0593     		str	r3, [sp, #20]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 207              		.loc 1 176 3 is_stmt 1 view .LVU55
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 208              		.loc 1 176 36 is_stmt 0 view .LVU56
 209 0078 4FF48052 		mov	r2, #4096
 210 007c 0692     		str	r2, [sp, #24]
 177:Core/Src/main.c **** 
 211              		.loc 1 177 3 is_stmt 1 view .LVU57
 177:Core/Src/main.c **** 
 212              		.loc 1 177 36 is_stmt 0 view .LVU58
 213 007e 0793     		str	r3, [sp, #28]
 179:Core/Src/main.c ****   {
 214              		.loc 1 179 3 is_stmt 1 view .LVU59
 179:Core/Src/main.c ****   {
 215              		.loc 1 179 7 is_stmt 0 view .LVU60
 216 0080 03A8     		add	r0, sp, #12
 217 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 218              	.LVL4:
 179:Core/Src/main.c ****   {
 219              		.loc 1 179 6 view .LVU61
 220 0086 20B9     		cbnz	r0, .L10
 183:Core/Src/main.c **** 
 221              		.loc 1 183 1 view .LVU62
 222 0088 15B0     		add	sp, sp, #84
 223              		.cfi_remember_state
 224              		.cfi_def_cfa_offset 4
 225              		@ sp needed
 226 008a 5DF804FB 		ldr	pc, [sp], #4
 227              	.L9:
 228              		.cfi_restore_state
 168:Core/Src/main.c ****   }
 229              		.loc 1 168 5 is_stmt 1 view .LVU63
 230 008e FFF7FEFF 		bl	Error_Handler
 231              	.LVL5:
 232              	.L10:
 181:Core/Src/main.c ****   }
 233              		.loc 1 181 5 view .LVU64
 234 0092 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 13


 235              	.LVL6:
 236              	.L12:
 237 0096 00BF     		.align	2
 238              	.L11:
 239 0098 00380240 		.word	1073887232
 240 009c 00700040 		.word	1073770496
 241              		.cfi_endproc
 242              	.LFE131:
 244              		.section	.text.main,"ax",%progbits
 245              		.align	1
 246              		.global	main
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	main:
 252              	.LFB130:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 253              		.loc 1 69 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 10B5     		push	{r4, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 261              		.loc 1 77 3 view .LVU66
 262 0002 FFF7FEFF 		bl	HAL_Init
 263              	.LVL7:
  84:Core/Src/main.c **** 
 264              		.loc 1 84 3 view .LVU67
 265 0006 FFF7FEFF 		bl	SystemClock_Config
 266              	.LVL8:
  91:Core/Src/main.c ****   MX_USART2_UART_Init();
 267              		.loc 1 91 3 view .LVU68
 268 000a FFF7FEFF 		bl	MX_GPIO_Init
 269              	.LVL9:
  92:Core/Src/main.c ****   MX_TIM2_Init();
 270              		.loc 1 92 3 view .LVU69
 271 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 272              	.LVL10:
  93:Core/Src/main.c **** 
 273              		.loc 1 93 3 view .LVU70
 274 0012 FFF7FEFF 		bl	MX_TIM2_Init
 275              	.LVL11:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 276              		.loc 1 96 3 view .LVU71
 277 0016 FFF7FEFF 		bl	MX_NVIC_Init
 278              	.LVL12:
 111:Core/Src/main.c **** 
 279              		.loc 1 111 3 view .LVU72
 280 001a 0021     		movs	r1, #0
 281 001c 1048     		ldr	r0, .L20
 282 001e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 283              	.LVL13:
 284 0022 1BE0     		b	.L18
 285              	.LVL14:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 14


 286              	.L15:
 287              	.LBB8:
 123:Core/Src/main.c ****       HAL_Delay(10); //!!!!!! ONLY FOR TEST
 288              		.loc 1 123 7 discriminator 3 view .LVU73
 289 0024 0E4B     		ldr	r3, .L20
 290 0026 1968     		ldr	r1, [r3]
 291 0028 04EB8402 		add	r2, r4, r4, lsl #2
 292 002c 5300     		lsls	r3, r2, #1
 293 002e 4B63     		str	r3, [r1, #52]
 124:Core/Src/main.c ****     }
 294              		.loc 1 124 7 discriminator 3 view .LVU74
 295 0030 0A20     		movs	r0, #10
 296 0032 FFF7FEFF 		bl	HAL_Delay
 297              	.LVL15:
 121:Core/Src/main.c ****     {
 298              		.loc 1 121 27 discriminator 3 view .LVU75
 299 0036 0134     		adds	r4, r4, #1
 300              	.LVL16:
 121:Core/Src/main.c ****     {
 301              		.loc 1 121 27 is_stmt 0 discriminator 3 view .LVU76
 302 0038 E4B2     		uxtb	r4, r4
 303              	.LVL17:
 304              	.L14:
 121:Core/Src/main.c ****     {
 305              		.loc 1 121 19 is_stmt 1 discriminator 1 view .LVU77
 306 003a 632C     		cmp	r4, #99
 307 003c F2D9     		bls	.L15
 127:Core/Src/main.c ****     {
 308              		.loc 1 127 12 is_stmt 0 view .LVU78
 309 003e 6424     		movs	r4, #100
 310              	.LVL18:
 127:Core/Src/main.c ****     {
 311              		.loc 1 127 12 view .LVU79
 312 0040 0AE0     		b	.L16
 313              	.LVL19:
 314              	.L17:
 129:Core/Src/main.c ****       HAL_Delay(10); //!!!!!! ONLY FOR TEST
 315              		.loc 1 129 7 is_stmt 1 discriminator 3 view .LVU80
 316 0042 074B     		ldr	r3, .L20
 317 0044 1968     		ldr	r1, [r3]
 318 0046 04EB8402 		add	r2, r4, r4, lsl #2
 319 004a 5300     		lsls	r3, r2, #1
 320 004c 4B63     		str	r3, [r1, #52]
 130:Core/Src/main.c ****     }
 321              		.loc 1 130 7 discriminator 3 view .LVU81
 322 004e 0A20     		movs	r0, #10
 323 0050 FFF7FEFF 		bl	HAL_Delay
 324              	.LVL20:
 127:Core/Src/main.c ****     {
 325              		.loc 1 127 27 discriminator 3 view .LVU82
 326 0054 013C     		subs	r4, r4, #1
 327              	.LVL21:
 127:Core/Src/main.c ****     {
 328              		.loc 1 127 27 is_stmt 0 discriminator 3 view .LVU83
 329 0056 E4B2     		uxtb	r4, r4
 330              	.LVL22:
 331              	.L16:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 15


 127:Core/Src/main.c ****     {
 332              		.loc 1 127 21 is_stmt 1 discriminator 1 view .LVU84
 333 0058 002C     		cmp	r4, #0
 334 005a F2D1     		bne	.L17
 335              	.LVL23:
 336              	.L18:
 127:Core/Src/main.c ****     {
 337              		.loc 1 127 21 is_stmt 0 discriminator 1 view .LVU85
 338              	.LBE8:
 117:Core/Src/main.c ****   {
 339              		.loc 1 117 3 is_stmt 1 view .LVU86
 340              	.LBB9:
 120:Core/Src/main.c ****     for (i = 0; i < 100; i++)
 341              		.loc 1 120 5 view .LVU87
 121:Core/Src/main.c ****     {
 342              		.loc 1 121 5 view .LVU88
 121:Core/Src/main.c ****     {
 343              		.loc 1 121 12 is_stmt 0 view .LVU89
 344 005c 0024     		movs	r4, #0
 121:Core/Src/main.c ****     {
 345              		.loc 1 121 5 view .LVU90
 346 005e ECE7     		b	.L14
 347              	.L21:
 348              		.align	2
 349              	.L20:
 350 0060 00000000 		.word	htim2
 351              	.LBE9:
 352              		.cfi_endproc
 353              	.LFE130:
 355              		.text
 356              	.Letext0:
 357              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 358              		.file 4 "c:\\users\\danie\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 359              		.file 5 "c:\\users\\danie\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 360              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 361              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 362              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 363              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 364              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 365              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 366              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 367              		.file 13 "Core/Inc/tim.h"
 368              		.file 14 "Core/Inc/usart.h"
 369              		.file 15 "Core/Inc/gpio.h"
 370              		.file 16 "<built-in>"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccZVjUli.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:20     .text.MX_NVIC_Init:0000000000000000 $t
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:25     .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:52     .text.Error_Handler:0000000000000000 $t
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:58     .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:90     .text.SystemClock_Config:0000000000000000 $t
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:96     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:239    .text.SystemClock_Config:0000000000000098 $d
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:245    .text.main:0000000000000000 $t
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:251    .text.main:0000000000000000 main
C:\Users\danie\AppData\Local\Temp\ccZVjUli.s:350    .text.main:0000000000000060 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
MX_TIM2_Init
HAL_TIM_PWM_Start
HAL_Delay
htim2
